executors:
  base-image:
    docker:
      - image: buildpack-deps:bionic

aliases:
  - &install-base-deps
    run:
      name: Install base dependencies
      command: |
        apt-get update -yqq
        apt-get install -y cmake libgl1-mesa-dev mesa-common-dev ninja-build unzip

version: 2.1
jobs:
  build:
    executor: base-image
    steps:
      - checkout
      - *install-base-deps
      - run:
          name: Install SPIR-V dependencies
          command: |
            git clone https://github.com/KhronosGroup/SPIRV-Headers
            wget -q https://github.com/KhronosGroup/SPIRV-Tools/releases/download/master-tot/SPIRV-Tools-master-linux-RelWithDebInfo.zip
            unzip SPIRV-Tools-master-linux-RelWithDebInfo.zip -d SPIRV-Tools

      - restore_cache:
          key: deqp-vk-1.1.2.3
      - run:
          name: Build Vulkan CTS
          command: |
            if [ -x VK-GL-CTS/deqp-vk ]; then exit 0; fi
            rm -rf VK-GL-CTS
            git clone https://github.com/KhronosGroup/VK-GL-CTS
            mkdir -p VK-GL-CTS/build
            cd VK-GL-CTS/build
            git checkout vulkan-cts-1.1.2.3
            python ../external/fetch_sources.py
            sed -i 's/libvulkan.so.1/libtalvos-vulkan.so/' \
              ../framework/platform/lnx/tcuLnxVulkanPlatform.cpp
            cmake ..
            make -j 4
            cp external/vulkancts/modules/vulkan/deqp-vk ..
            mv external/vulkancts/modules/vulkan/vulkan ..
      - save_cache:
          key: deqp-vk-1.1.2.3
          paths:
            - VK-GL-CTS/deqp-vk
            - VK-GL-CTS/vulkan

      - run:
          name: Build Talvos
          command: |
            git clone https://github.com/talvos/talvos talvos-src
            mkdir -p talvos
            mkdir -p talvos-src/build
            cd talvos-src/build
            git log -n 1 --oneline | awk '{print $1}' >../../talvos/COMMIT
            cmake .. \
              -DCMAKE_BUILD_TYPE=Debug \
              -DCMAKE_INSTALL_PREFIX=$PWD/../../talvos \
              -DCMAKE_C_COMPILER=gcc-7 \
              -DCMAKE_CXX_COMPILER=g++-7 \
              -DSPIRV_INCLUDE_DIR=$PWD/../../SPIRV-Headers/include/ \
              -DSPIRV_TOOLS_INCLUDE_DIR=$PWD/../../SPIRV-Tools/include/ \
              -DSPIRV_TOOLS_LIBRARY_DIR=$PWD/../../SPIRV-Tools/lib/
            make && make test && make install

      - persist_to_workspace:
          root: .
          paths:
            - talvos
            - VK-GL-CTS

  test:
    executor: base-image
    parameters:
      group:
        type: string
    steps:
      - checkout
      - *install-base-deps
      - attach_workspace:
          at: .
      - run:
          name: "Check for new Talvos commits"
          command: |
            git fetch
            if grep -f talvos/COMMIT README.md
            then
              echo "No new Talvos commits"
              circleci step halt
            elif git show origin/circleci-results:README.md | grep -f talvos/COMMIT
            then
              echo "Pending results already present for this Talvos commit"
              circleci step halt
            fi
      - run:
          name: Run tests
          no_output_timeout: 2h
          command: |
            export TALVOS_MAX_ERRORS=1
            export LD_LIBRARY_PATH=$PWD/talvos/lib/:$LD_LIBRARY_PATH
            export PATH=$PWD/VK-GL-CTS:$PATH
            cd results/<< parameters.group >>
            ln -s ../../VK-GL-CTS/vulkan
            grep "dEQP-VK\.<< parameters.group >>\." ../../vk-default.txt >TESTS
            python ../../classify.py TESTS
            git diff --stat
      - persist_to_workspace:
          root: .
          paths:
            - results/<< parameters.group >>

  collect_results:
    executor: base-image
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "09:05:cc:dd:e4:25:41:d8:1a:34:af:17:4b:bb:ee:6d"
      - run:
          name: Check for differences in results
          command: |
            # Check for any changes
            set +o pipefail
            if [ -n "`git diff --stat`" ]
            then
              # Regenerate results summary in README
              sed -i '/Results for commit/,$d' README.md
              echo "Results for commit `cat talvos/COMMIT` on `date '+%a %d %b %Y'`" >>README.md
              ./summary.sh >>README.md
              echo '```' >>README.md

              # Commit updated results
              git config --global user.email "null"
              git config --global user.name "CircleCI Deployment"
              git add -u results/ README.md
              git commit -m "CircleCI results for `cat talvos/COMMIT`"

              # Sanity check total number of tests
              total_tests=`wc -l vk-default.txt | awk '{print $1}'`
              if ! grep 'Total tests passed.*'$total_tests README.md
              then
                # Push to branch for manual inspection
                echo "Unexpected total number of tests in results summary"
                git push -f origin HEAD:circleci-results
                exit 1
              fi

              # Check for regressions
              git show results/*/PASS | grep '^-dEQP' | cut -c 2- >REGRESSIONS
              if [ -s REGRESSIONS ]
              then
                # Dump regressions and push to branch on GitHub
                echo
                echo "`wc -l REGRESSIONS` regressions detected"
                cat REGRESSIONS
                echo
                git push -f origin HEAD:circleci-results
                exit 1
              fi

              # Push updated results to GitHub master branch
              if ! git push origin master
              then
                echo "Failed to push results"
                exit 1
              fi
            else
              echo "No differences in results"
            fi

workflows:
  version: 2.1
  build-and-test:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          filters:
            branches:
              only: master
      - test:
          name: test-info
          group: info
          requires:
            - build
      - test:
          name: test-api
          group: api
          requires:
            - build
      - test:
          name: test-memory
          group: memory
          requires:
            - build
      - test:
          name: test-pipeline
          group: pipeline
          requires:
            - build
      - test:
          name: test-binding_model
          group: binding_model
          requires:
            - build
      - test:
          name: test-spirv_assembly
          group: spirv_assembly
          requires:
            - build
      - test:
          name: test-glsl
          group: glsl
          requires:
            - build
      - test:
          name: test-renderpass
          group: renderpass
          requires:
            - build
      - test:
          name: test-renderpass2
          group: renderpass2
          requires:
            - build
      - test:
          name: test-ubo
          group: ubo
          requires:
            - build
      - test:
          name: test-dynamic_state
          group: dynamic_state
          requires:
            - build
      - test:
          name: test-ssbo
          group: ssbo
          requires:
            - build
      - test:
          name: test-query_pool
          group: query_pool
          requires:
            - build
      - test:
          name: test-draw
          group: draw
          requires:
            - build
      - test:
          name: test-compute
          group: compute
          requires:
            - build
      - test:
          name: test-image
          group: image
          requires:
            - build
      - test:
          name: test-wsi
          group: wsi
          requires:
            - build
      - test:
          name: test-synchronization
          group: synchronization
          requires:
            - build
      - test:
          name: test-sparse_resources
          group: sparse_resources
          requires:
            - build
      - test:
          name: test-tessellation
          group: tessellation
          requires:
            - build
      - test:
          name: test-rasterization
          group: rasterization
          requires:
            - build
      - test:
          name: test-clipping
          group: clipping
          requires:
            - build
      - test:
          name: test-fragment_operations
          group: fragment_operations
          requires:
            - build
      - test:
          name: test-texture
          group: texture
          requires:
            - build
      - test:
          name: test-geometry
          group: geometry
          requires:
            - build
      - test:
          name: test-robustness
          group: robustness
          requires:
            - build
      - test:
          name: test-multiview
          group: multiview
          requires:
            - build
      - test:
          name: test-subgroups
          group: subgroups
          requires:
            - build
      - test:
          name: test-ycbcr
          group: ycbcr
          requires:
            - build
      - test:
          name: test-protected_memory
          group: protected_memory
          requires:
            - build
      - test:
          name: test-device_group
          group: device_group
          requires:
            - build
      - test:
          name: test-memory_model
          group: memory_model
          requires:
            - build
      - collect_results:
          requires:
            - test-info
            - test-api
            - test-memory
            - test-pipeline
            - test-binding_model
            - test-spirv_assembly
            - test-glsl
            - test-renderpass
            - test-renderpass2
            - test-ubo
            - test-dynamic_state
            - test-ssbo
            - test-query_pool
            - test-draw
            - test-compute
            - test-image
            - test-wsi
            - test-synchronization
            - test-sparse_resources
            - test-tessellation
            - test-rasterization
            - test-clipping
            - test-fragment_operations
            - test-texture
            - test-geometry
            - test-robustness
            - test-multiview
            - test-subgroups
            - test-ycbcr
            - test-protected_memory
            - test-device_group
            - test-memory_model
